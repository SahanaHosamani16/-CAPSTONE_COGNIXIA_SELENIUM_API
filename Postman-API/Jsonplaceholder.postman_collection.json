{
	"info": {
		"_postman_id": "c99b6bec-4829-46f5-9997-dbbd4ae6f895",
		"name": "Jsonplaceholder",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "45012468",
		"_collection_link": "https://sahana-9671003.postman.co/workspace/Capstone~17a4e56c-6e77-4819-8df2-0da5be610936/collection/45012468-c99b6bec-4829-46f5-9997-dbbd4ae6f895?action=share&source=collection_link&creator=45012468"
	},
	"item": [
		{
			"name": "Get_Posts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"test started to excute\")\r",
							"pm.test(\"Tc:Verify Response time is less than 2000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});\r",
							"pm.test(\"Tc: Verifyy response body\", function () {\r",
							"    pm.expect(pm.response.text()).to.include( \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\");\r",
							"});\r",
							"pm.test(\"Tc:Verify Status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"TC: verify header value\", function(){\r",
							"\r",
							"    var headerValue_ContentType = pm.response.headers.get(\"Content-Type\")\r",
							"    console.log(`Content Type value are : ${headerValue_ContentType}`)\r",
							"    pm.expect(headerValue_ContentType).to.eql(\"application/json; charset=utf-8\")\r",
							"\r",
							"\r",
							"\r",
							"})\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Tc:Verify a value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].title).to.eql( \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add_post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"test started to excute\")\r",
							"pm.test(\"Tc:Verify Response time is less than 2000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});\r",
							"pm.test(\"Tc: Verifyy response body\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"voluptatem eligendi optio atque-added\");\r",
							"});\r",
							"pm.test(\"Tc:Verify Status code\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"TC: verify header value\", function(){\r",
							"\r",
							"    var headerValue_ContentType = pm.response.headers.get(\"Content-Type\")\r",
							"    console.log(`Content Type value are : ${headerValue_ContentType}`)\r",
							"    pm.expect(headerValue_ContentType).to.eql(\"application/json; charset=utf-8\")\r",
							"\r",
							"\r",
							"\r",
							"})\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"userId\": 3,\r\n  \"title\": \"voluptatem eligendi optio atque-added\",\r\n  \"body\": \"doloribus magni aut molestiae\\nexercitationem nesciunt rem\\nvoluptatem sequi quos\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "update_post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"test started to excute\")\r",
							"pm.test(\"Tc:Verify Response time is less than 2000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});\r",
							"pm.test(\"Tc: Verifyy response body\", function () {\r",
							"    pm.expect(pm.response.text()).to.include( \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit-updated\");\r",
							"});\r",
							"pm.test(\"Tc:Verify Status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"TC: verify header value\", function(){\r",
							"\r",
							"    var headerValue_ContentType = pm.response.headers.get(\"Content-Type\")\r",
							"    console.log(`Content Type value are : ${headerValue_ContentType}`)\r",
							"    pm.expect(headerValue_ContentType).to.eql(\"application/json; charset=utf-8\")\r",
							"\r",
							"\r",
							"\r",
							"})\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\r\n        \"userId\": 1,\r\n       \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit-updated\",\r\n        \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		}
	]
}